import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt

# Datos de la Actividad 1
datos_actividad_1 = np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
                              2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5])

# Distribuci칩n previa
prior_alpha = 2
prior_beta = 1

# Distribuci칩n posterior bajo modelo Poisson
posterior_alpha = prior_alpha + np.sum(datos_actividad_1)
posterior_beta = prior_beta + len(datos_actividad_1)

# Estimadores bayesianos
estimador_cuadratico = posterior_alpha / (posterior_alpha + posterior_beta)
estimador_lineal = (posterior_alpha + 1) / (posterior_alpha + posterior_beta + 2)
estimador_discreto = (posterior_alpha + 0.5) / (posterior_alpha + posterior_beta + 1)

# Intervalo bayesiano de credibilidad al 95%
intervalo_credibilidad = stats.beta.interval(0.95, posterior_alpha, posterior_beta)

# Resultados
print("Distribuci칩n posterior bajo modelo Poisson:")
print(f"Alpha: {posterior_alpha}, Beta: {posterior_beta}")
print("\nEstimadores bayesianos:")
print(f"Cuadr치tico: {estimador_cuadratico}")
print(f"Lineal: {estimador_lineal}")
print(f"Discreto: {estimador_discreto}")
print("\nIntervalo de credibilidad al 95%:", intervalo_credibilidad)


# Generar muestras para graficar las distribuciones
x = np.linspace(0, 1, 1000)
prior_dist = stats.beta(prior_alpha, prior_beta).pdf(x)
posterior_dist = stats.beta(posterior_alpha, posterior_beta).pdf(x)

# Crear el gr치fico
plt.figure(figsize=(10, 6))
plt.plot(x, prior_dist, label='Distribuci칩n Previa', linestyle='--')
plt.plot(x, posterior_dist, label='Distribuci칩n Posterior', linestyle='-')
plt.title('Distribuci칩n Previa y Posterior bajo Modelo Poisson')
plt.xlabel('Par치metro 풪')
plt.ylabel('Densidad de Probabilidad')
plt.legend()
plt.show()

# Actividad 2
# Datos
error_anterior = 0.17
tamano_muestra = 100
fallos_nuevo_metodo = 12

# Distribuci칩n previa
prior_a = 1
prior_b = 6

# Distribuci칩n posterior bajo modelo Binomial
posterior_a = prior_a + fallos_nuevo_metodo
posterior_b = prior_b + (tamano_muestra - fallos_nuevo_metodo)

# Estimadores bayesianos
estimador_cuadratico_2 = posterior_a / (posterior_a + posterior_b)
estimador_lineal_2 = (posterior_a + 1) / (posterior_a + posterior_b + 2)
estimador_discreto_2 = (posterior_a + 0.5) / (posterior_a + posterior_b + 1)

# Intervalo bayesiano de credibilidad al 95%
intervalo_credibilidad_2 = stats.beta.interval(0.95, posterior_a, posterior_b)

# Resultados
print("Actividad 2:")
print("Distribuci칩n posterior bajo modelo Binomial:")
print(f"Alpha: {posterior_a}, Beta: {posterior_b}")
print("\nEstimadores bayesianos:")
print(f"Cuadr치tico: {estimador_cuadratico_2}")
print(f"Lineal: {estimador_lineal_2}")
print(f"Discreto: {estimador_discreto_2}")
print("\nIntervalo de credibilidad al 95%:", intervalo_credibilidad_2)
print("\n-----------------------------------------------------")

# Generar muestras para graficar las distribuciones
x = np.linspace(0, 1, 1000)
prior_dist_2 = stats.beta(prior_a, prior_b).pdf(x)
posterior_dist_2 = stats.beta(posterior_a, posterior_b).pdf(x)

# Crear el gr치fico
plt.figure(figsize=(10, 6))
plt.plot(x, prior_dist_2, label='Distribuci칩n Previa', linestyle='--')
plt.plot(x, posterior_dist_2, label='Distribuci칩n Posterior', linestyle='-')
plt.title('Distribuci칩n Previa y Posterior bajo Modelo Binomial')
plt.xlabel('Par치metro 풪')
plt.ylabel('Densidad de Probabilidad')
plt.legend()
plt.show()

# Actividad 3
# Datos
clientes_totales = 15000
tama침o_muestra_actividad_3 = 50
reclamaciones_falsas = 0
media_esperada = 0.05
moda_esperada = 0.03

# Estimaci칩n de hiperpar치metros a y b
a = ((1 - media_esperada) / (media_esperada - moda_esperada**2)) * (moda_esperada**2)
b = a * ((1 / moda_esperada) - 1)

# Distribuci칩n posterior bajo modelo Beta
posterior_a_3 = a + reclamaciones_falsas
posterior_b_3 = b + tama침o_muestra_actividad_3 - reclamaciones_falsas

# Estimadores puntuales del par치metro 洧랚
estimador_1 = (posterior_a_3) / (posterior_a_3 + posterior_b_3)
estimador_2 = (posterior_a_3 + 1) / (posterior_a_3 + posterior_b_3 + 2)

# Intervalo bayesiano de credibilidad al 95%
intervalo_credibilidad_3 = stats.beta.interval(0.95, posterior_a_3, posterior_b_3)

# Resultados
print("Actividad 3:")
print("Hiperpar치metros a y b:")
print(f"a: {a}, b: {b}")
print("\nDistribuci칩n posterior bajo modelo Beta:")
print(f"Alpha: {posterior_a_3}, Beta: {posterior_b_3}")
print("\nEstimadores puntuales del par치metro 洧랚:")
print(f"Estimador 1: {estimador_1}")
print(f"Estimador 2: {estimador_2}")
print("\nIntervalo de credibilidad al 95%:", intervalo_credibilidad_3)
print("\n-----------------------------------------------------")

# Generar muestras para graficar las distribuciones
x = np.linspace(0, 1, 1000)
prior_dist_3 = stats.beta(a, b).pdf(x)
posterior_dist_3 = stats.beta(posterior_a_3, posterior_b_3).pdf(x)

# Crear el gr치fico
plt.figure(figsize=(10, 6))
plt.plot(x, prior_dist_3, label='Distribuci칩n Previa', linestyle='--')
plt.plot(x, posterior_dist_3, label='Distribuci칩n Posterior', linestyle='-')
plt.title('Distribuci칩n Previa y Posterior bajo Modelo Beta')
plt.xlabel('Par치metro 풪')
plt.ylabel('Densidad de Probabilidad')
plt.legend()
plt.show()

# Actividad 4

respuesta_pregunta_teorica = """
La principal diferencia entre la interpretaci칩n de un intervalo de confianza frecuentista 
y un intervalo de credibilidad bayesiano radica en la naturaleza de las afirmaciones 
hechas sobre el par치metro de inter칠s.

En el enfoque frecuentista, el intervalo de confianza se interpreta de la siguiente manera: 
si repiti칠ramos el experimento un n칰mero infinito de veces, el 95% de los intervalos de 
confianza construidos contendr칤an el verdadero valor del par치metro. Aqu칤, el par치metro es 
considerado fijo y el intervalo es variable.

Por otro lado, en el enfoque bayesiano, el intervalo de credibilidad se interpreta como la 
probabilidad de que el par치metro est칠 dentro del intervalo dada la informaci칩n observada y 
la distribuci칩n previa. Es decir, se proporciona una medida directa de la creencia en la 
presencia del par치metro en el intervalo. Aqu칤, el intervalo es fijo y el par치metro es 
considerado como una variable aleatoria.

En resumen, la diferencia clave radica en la interpretaci칩n probabil칤stica directa en el 
enfoque bayesiano, mientras que el enfoque frecuentista se basa en propiedades de 
repetici칩n de muestreo a largo plazo.
"""

# Resultados
print("Actividad 4:")
print("Respuesta a la pregunta te칩rica:")
print(respuesta_pregunta_teorica)

